source("./source/gglasso.r")#
source("./source/model.r")#
source("./source/utilities.r")#
dyn.load("./source/gglasso.so")#
#
dl <- function(r,delta)#
{#
	d=rep(0,length(r))#
	for (i in 1:length(r))#
	{#
		if (r[i]< (-delta)) d[i]=-2*delta#
		else if (r[i]>delta) d[i]=2*delta#
		else d[i]=2*r[i]#
#
	}#
	return (d)#
}#
#
#
set.seed(11)#
x=matrix(rnorm(100*200),100,200) #
set.seed(11)#
y=sample(c(-1,1),100,replace=T)#
group<-rep(1:40,each=5)#
nobs=nrow(x)#
nvars=ncol(x)#
#
#
bn=as.integer(max(group))#
bs=as.integer(as.numeric(table(group)))#
delta=0.4#
pf=rep(1,bn)#
system.time(m1 <- gglasso(loss="hreg",y=y,x=x,group=group,eps=1e-12,pf=pf,delta=delta))
setwd('/Users/emeryyi/Documents/Research/googleproject/gglasso')
pf=pf*bn/sum(pf) #
B <- as.matrix(m1$beta)
